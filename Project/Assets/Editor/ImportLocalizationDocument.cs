using UnityEngine;
using UnityEditor;
using System.Collections;
using System.IO;

public class ImportLocalizationDocument : MonoBehaviour 
{

	[MenuItem("Import Localization/Import")]
	public static void ShowWindow()
	{
		//string pathWeb = "https://docs.google.com/spreadsheets/d/1gSolO6xrbpL-8HEuTa3R6cugucW_okqQvuu6a9pFcFw/pub?gid=0&single=true&output=csv";
		//pathWeb - путь к загружаемому файлу
		//string pathWeb = "https://docs.google.com/spreadsheets/d/1V4aH8Xv39OrL5gOFpPoRSiDEOL4sueGcMNMfc-iRQgQ/pub?gid=0&single=true&output=csv";
		string pathWeb = "https://docs.google.com/spreadsheets/d/1KrlGJ9ahH2GPMr9JOD0Gj57yF5JuyPlmB9UK0ioVdtY/pub?gid=1882214859&single=true&output=csv";

		WWW www = new WWW(pathWeb);

		do{
			//Debug.Log("Please wait");
		}while(!www.isDone);

		string contentWeb = www.text;

		string pathCSV = "Assets/SmartLocalizationWorkspace/Localization.csv";
		string pathFileLanguage = "Assets/SmartLocalizationWorkspace/AutoGenerated/Resources/Language.txt";
		string pathE_File = "Assets/SmartLocalizationWorkspace/AutoGenerated/Resources/E_Language.txt";

		File.WriteAllText (pathCSV, contentWeb);
		StreamReader sr = new StreamReader (pathCSV);
		string temp_string = sr.ReadLine ();
		string[] LanguageCSV = temp_string.Split (',');

		int countKeys = File.ReadAllLines (pathCSV).Length;
		int countLanguage = LanguageCSV.Length;

		string[,] keyCSV = new string[File.ReadAllLines (pathCSV).Length, LanguageCSV.Length];

			

		for (int i = 1; i < countKeys; i++) 
		{
			
			temp_string = sr.ReadLine ();
			string[] buff_string = temp_string.Split (',');


			for (int j = 0; j < countLanguage; j++) 
			{
				keyCSV [i, j] = buff_string [j];	
			}
		}

		for (int i = 1; i < countLanguage; i++) {
		
			string pathFileLanguageLocal = "Assets/SmartLocalizationWorkspace/AutoGenerated/Resources/Language." + LanguageCSV [i] + ".txt";

			File.Copy (pathE_File, pathFileLanguageLocal, true);
			StreamWriter writeFileKey = new StreamWriter (pathFileLanguageLocal, true);

		for (int j = 1; j < countKeys; j++) {

			if (keyCSV [j, 0] != "") {
				writeFileKey.WriteLine ("<data name=\"" + keyCSV [j, 0] + "\" xml:space=\"preserve\">", true);
			} else {
				writeFileKey.WriteLine ("<data name=\"##EMPTY_KEY №" + j + "##\" xml:space=\"preserve\">", true);
			}
				
			if (keyCSV [j, i] != "") {
				writeFileKey.WriteLine ("<value>" + keyCSV [j, i] + "</value>", true);
			} else {
				writeFileKey.WriteLine ("<value>" + "##EMPTY[" + keyCSV [j, 0] + "]##" + "</value>", true);
			}
			writeFileKey.WriteLine ("</data>", true);
		};

			writeFileKey.WriteLine ("</root>", true);
			writeFileKey.Close ();

			File.Copy (pathFileLanguageLocal, "Assets/SmartLocalizationWorkspace/Data/LanguageData/Language." + LanguageCSV [i] + ".resx", true);
		}
		;


		File.Copy (pathE_File, pathFileLanguage, true);
		StreamWriter writeFileKeyLanguage = new StreamWriter (pathFileLanguage, true);
		for (int i = 1; i < countKeys; i++) {
		if (keyCSV [i, 0] != "") {
			writeFileKeyLanguage.WriteLine ("<data name=\"" + keyCSV [i, 0] + "\" xml:space=\"preserve\">", true);
		} else {
			writeFileKeyLanguage.WriteLine ("<data name=\"##EMPTY_KEY №" + i + "##\" xml:space=\"preserve\">", true);
		}
			writeFileKeyLanguage.WriteLine ("<value>New Value</value>", true);
			writeFileKeyLanguage.WriteLine ("</data>", true);
		}

		writeFileKeyLanguage.WriteLine ("</root>", true);
		writeFileKeyLanguage.Close ();
		File.Copy (pathFileLanguage, "Assets/SmartLocalizationWorkspace/Data/LanguageData/Language.resx", true);
		sr.Close ();

		Debug.Log ("Import Localization DONE");
	}
}
